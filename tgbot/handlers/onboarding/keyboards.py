from telegram import InlineKeyboardButton, InlineKeyboardMarkup

from tgbot.handlers.onboarding.manage_data import SECRET_LEVEL_BUTTON
from tgbot.handlers.onboarding.static_text import github_button_text, secret_level_button_text, start_button_text


def make_keyboard_for_start_command() -> InlineKeyboardMarkup:
    buttons = [[
        InlineKeyboardButton(github_button_text, url="https://github.com/ohld/django-telegram-bot"),
        InlineKeyboardButton(secret_level_button_text, callback_data=f'{SECRET_LEVEL_BUTTON}')
    ]]

    return InlineKeyboardMarkup(buttons)

def make_keyboard_for_start() -> InlineKeyboardMarkup:
    buttons = [
        [
            InlineKeyboardButton(text='‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='–ú–µ–Ω—é'),
        ],
    ]

    return InlineKeyboardMarkup(buttons)

def make_keyboard_for_check_username() -> InlineKeyboardMarkup:
    buttons = [[
        InlineKeyboardButton(text='‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='–ú–µ–Ω—é')
    ]]
    return InlineKeyboardMarkup(buttons)

def make_keyboard_for_check_in() -> InlineKeyboardMarkup:
    buttons = [[
        InlineKeyboardButton(text='üíª –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª', url='https://t.me/+NouGXCd7ux4xY2Y6')
    ],[
        InlineKeyboardButton(text='‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='–ú–µ–Ω—é')
    ]]
    return InlineKeyboardMarkup(buttons)

def make_keyboard_for_cmd_menu(adm) -> InlineKeyboardMarkup:
        buttons = []
                # [
        #     InlineKeyboardButton(text='üë´üï∫ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏', url='https://t.me/serg_p2p')
        # ],
        # [
        #     InlineKeyboardButton(text='üÜò –ü–æ–º–æ—â—å', url='https://t.me/serg_p2p'),
        #     InlineKeyboardButton(text='üí∞üí∞ –ö–æ—à–µ–ª–µ–∫', callback_data='–ö–æ—à–µ–ª–µ–∫')
        # ]
        btn_vc = InlineKeyboardButton(
            text='üì± –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', callback_data='–ö–æ—à–µ–ª–µ–∫')
        btn_ref = InlineKeyboardButton(
            text='üë´üï∫ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞', callback_data='–†–µ—Ñ–µ—Ä–∞–ª–∫–∞')
        btn_academy = InlineKeyboardButton(
            text='‚ÑπÔ∏è FAQ', callback_data='FAQ')
        btn_history = InlineKeyboardButton(
            text='üóìüßæ –ò—Å—Ç–æ—Ä–∏–∏ –¥–µ–π—Å—Ç–≤–∏–π', callback_data='–ò—Å—Ç–æ—Ä–∏—è')
        buttons.append([btn_vc])
        buttons.append([btn_ref])
        buttons.append([btn_history])
        buttons.append([btn_academy])
        
        if adm:
            btn_admin = InlineKeyboardButton(
                text='üìù –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ', callback_data="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ")
            buttons.append([btn_admin])
        return InlineKeyboardMarkup(buttons)

def make_keyboard_for_cmd_wallet(text_email: str) -> InlineKeyboardMarkup:
        buttons = []
        btn_help = InlineKeyboardButton(text='üÜò –ü–æ–º–æ—â—å', url='https://t.me/serg_p2p')
        btn_back = InlineKeyboardButton(text='‚è™ –ù–∞–∑–∞–¥', callback_data='–ú–µ–Ω—é')
        btn_top_up_usdt = InlineKeyboardButton(
            text='üì• –ü–æ–ø–æ–ª–Ω–∏—Ç—å', callback_data='–ü–æ–ø–æ–ª–Ω–∏—Ç—å_–ö–æ—à–µ–ª–µ–∫_TRC20')
        buttons.append([btn_top_up_usdt])
        btn_withdrawal_usdt = InlineKeyboardButton(
            text='üì§ –í—ã–≤–µ—Å—Ç–∏', callback_data='–í—ã–≤–µ—Å—Ç–∏')
        buttons.append([btn_withdrawal_usdt])
        btn_deactivate_usdt = InlineKeyboardButton(
            text='üîÄ –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å—á–µ—Ç', callback_data='–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å')
        buttons.append([btn_deactivate_usdt])
        if text_email != '':
            btn_change_email = InlineKeyboardButton(
                text='üì® –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—á—Ç—É', callback_data='–ü–æ—á—Ç–∞')
            buttons.append([btn_change_email])
        buttons.append([btn_help, btn_back])
        return InlineKeyboardMarkup(buttons)

def make_keyboard_for_cmd_top_up_wallet_usdt() -> InlineKeyboardMarkup:
        buttons = []
        btn_help = InlineKeyboardButton(text='üÜò –ü–æ–º–æ—â—å', url='https://t.me/serg_p2p')
        btn_back = InlineKeyboardButton(text='‚è™ –ù–∞–∑–∞–¥', callback_data='–ö–æ—à–µ–ª–µ–∫')
        buttons.append([btn_help, btn_back])
        return InlineKeyboardMarkup(buttons)

def make_keyboard_for_cmd_faq() -> InlineKeyboardMarkup:
    buttons = []
    btn_back = InlineKeyboardButton(text='‚è™ –ù–∞–∑–∞–¥', callback_data='–ú–µ–Ω—é')
    btn_main = InlineKeyboardButton(text='‚èÆ –í –Ω–∞—á–∞–ª–æ', callback_data='–°—Ç–∞—Ä—Ç')
    btn_1 = InlineKeyboardButton(
            text='1Ô∏è‚É£ –û –ø—Ä–æ–µ–∫—Ç–µ', callback_data='1Ô∏è‚É£')
    buttons.append([btn_1])
    btn_2 = InlineKeyboardButton(
            text='2Ô∏è‚É£ –ö–∞–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='2Ô∏è‚É£')
    buttons.append([btn_2])
    btn_3 = InlineKeyboardButton(
            text='3Ô∏è‚É£ –ö–æ–≥–¥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—è—Ç—Å—è –≤—ã–ø–ª–∞—Ç—ã', callback_data='3Ô∏è‚É£')
    buttons.append([btn_3])
    btn_4 = InlineKeyboardButton(
            text='4Ô∏è‚É£ –ö–∞–∫–æ–π % —è –ø–æ–ª—É—á—É –æ—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π', callback_data='4Ô∏è‚É£')
    buttons.append([btn_4])
    btn_5 = InlineKeyboardButton(
            text='5Ô∏è‚É£ –ö–∞–∫–∏–µ —Ä–∏—Å–∫–∏', callback_data='5Ô∏è‚É£')
    buttons.append([btn_5])
    btn_6 = InlineKeyboardButton(
            text='6Ô∏è‚É£ –°–º–æ–≥—É –ª–∏ —è –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏', callback_data='6Ô∏è‚É£')
    buttons.append([btn_6])
    buttons.append([btn_main, btn_back])
    return InlineKeyboardMarkup(buttons)

def make_keyboard_for_cmd_help() -> InlineKeyboardMarkup:
    buttons = []
    btn_back = InlineKeyboardButton(text='‚è™ –ù–∞–∑–∞–¥', callback_data='–ú–µ–Ω—é')
    btn_main = InlineKeyboardButton(text='‚èÆ –í –Ω–∞—á–∞–ª–æ', callback_data='–°—Ç–∞—Ä—Ç')
    buttons.append([btn_main, btn_back])
    return InlineKeyboardMarkup(buttons)

def make_keyboard_for_cmd_admin() -> InlineKeyboardMarkup:
    buttons = []
    btn_back = InlineKeyboardButton(text='‚è™ –ù–∞–∑–∞–¥', callback_data='–ú–µ–Ω—é')
    btn_main = InlineKeyboardButton(
        text='‚èÆ –í –Ω–∞—á–∞–ª–æ', callback_data='–°—Ç–∞—Ä—Ç')
    buttons.append([btn_main, btn_back])
    return InlineKeyboardMarkup(buttons)